openapi: 3.0.0
x-stoplight:
  id: lkd4mjwpm1z5y
info:
  title: API
  version: "1.0"
  description: Salvation Clinic International Minitries API Documentaion
  contact:
    name: Nana Kwesi Ofosu-Aikins
    email: nanaaikinson24@gmail.com
servers:
  - url: "http://localhost:3000"
tags:
  - name: admin
  - name: central
  - name: client
paths:
  /auth/login:
    post:
      summary: ""
      tags:
        - central
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
      operationId: central-auth-login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      description: "Central: Auth login"
  /auth/register:
    post:
      summary: ""
      tags:
        - central
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
      operationId: central-auth-register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      description: "Central: Auth register"
    parameters: []
  /client/podcasts:
    get:
      summary: ""
      tags:
        - client
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientGetPodcastsResponse"
      operationId: client-get-podcasts
      description: "Client: Get podcasts"
      parameters:
        - schema:
            type: number
          in: query
          name: limit
        - schema:
            type: number
          in: query
          name: page
        - schema:
            type: string
          in: query
          name: search
        - schema:
            type: string
            enum:
              - newest
              - oldest
          in: query
          name: sort
  "/client/podcasts/{podcastId}":
    parameters:
      - schema:
          type: string
        name: podcastId
        in: path
        required: true
    get:
      summary: ""
      tags:
        - client
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientGetPodcastResponse"
      operationId: client-get-podcast
      description: "Client: Get podcast"
  "/client/podcasts/{podcastId}/like":
    parameters:
      - schema:
          type: string
        name: podcastId
        in: path
        required: true
    patch:
      summary: ""
      tags:
        - client
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "401":
          description: Unauthorized
      operationId: client-like-podcast
      description: "Client: Like podcast"
      security:
        - X-USER-TOKEN: []
  "/client/podcasts/{podcastId}/comment":
    parameters:
      - schema:
          type: string
        name: podcastId
        in: path
        required: true
    post:
      summary: ""
      tags:
        - client
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "401":
          description: Unauthorized
      operationId: client-comment-podcast
      description: "Client: Comment on a podcast"
      security:
        - X-USER-TOKEN: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentPodcastRequest"
  "/client/podcasts/{podcastId}/comment/{commentId}":
    parameters:
      - schema:
          type: string
        name: podcastId
        in: path
        required: true
      - schema:
          type: string
        name: commentId
        in: path
        required: true
    patch:
      summary: ""
      tags:
        - client
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageResponse"
        "401":
          description: Unauthorized
      operationId: client-update-podcast-comment
      description: "Client: Update podcast comment"
      security:
        - X-USER-TOKEN: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CommentPodcastRequest"
components:
  schemas:
    Podcast:
      type: object
      x-examples:
        Example 1:
          id: 01HGDRCWFG6A5ASHQHWZHN4R70
          author: Evangelist Elijah Ben
          title: SUNDAY ANOINTING SERVICE-THE SPIRIT OF UNDERSTANDING PART 2
          summary: Message by Evang. Elijah-Ben Kusi Agyapong during Sunday Anointing Service
          description: Message by Evang. Elijah-Ben Kusi Agyapong during Sunday Anointing Service
          duration: "01:33:21"
          imageUrl: "https://s3.amazonaws.com/podcasts-image-uploads/rev-elijah-ben-scim-6bbd0a95d-large.png"
          audioUrl: "https://awscdn.podcasts.com/audio-qCgqW7G68X5kJPLaWfZeGp47Z.mp3"
          published: true
          publishedAt: "2023-11-27T07:44:51Z"
      properties:
        id:
          type: string
        author:
          type: string
        title:
          type: string
        summary:
          type: string
        description:
          type: string
        duration:
          type: string
        imageUrl:
          type: string
        audioUrl:
          type: string
        published:
          type: boolean
        publishedAt:
          type: string
      required:
        - id
        - author
        - title
        - summary
        - description
        - duration
        - imageUrl
        - audioUrl
        - published
        - publishedAt
    AuthUser:
      type: object
      x-examples:
        Example 1:
          id: 01HGEMHYJMT832QCWAJMCE67FK
          firstName: Nana
          lastName: Aikinson
          email: nanaaikinson24@example.com
          emailVerified: true
          avatar: null
          channels:
            - web
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
        avatar:
          type: string
          nullable: true
        channels:
          type: array
          items:
            type: string
            enum:
              - web
              - mobile
              - admin
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
        - avatar
        - channels
    LoginRequest:
      type: object
      x-examples:
        Example 1:
          email: nanaaikinson24@example.com
          password: Pa$$w0rd
          channel: web
      properties:
        email:
          type: string
        password:
          type: string
        channel:
          type: string
          enum:
            - web
            - mobile
      required:
        - email
        - password
        - channel
    RegisterRequest:
      type: object
      x-examples:
        Example 1:
          firstName: Nana
          lastName: Aikinson
          email: nanaaikinson24@example.com
          password: Pa$$w0rd
          channel: web
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        channel:
          type: string
          enum:
            - web
            - mobile
      required:
        - firstName
        - lastName
        - email
        - password
        - channel
    CommentPodcastRequest:
      title: CommentPodcastRequest
      x-stoplight:
        id: fbvkzkv2v9pej
      type: object
      properties:
        comment:
          type: string
          x-stoplight:
            id: bjyaef46zg2ds
      required:
        - comment
    MessageResponse:
      title: MessageResponse
      x-stoplight:
        id: 6defb2oihhrik
      type: object
      properties:
        code:
          type: integer
          x-stoplight:
            id: wuyzq2yhox71k
        message:
          type: string
          x-stoplight:
            id: q50kmt3wtn7cw
      required:
        - code
        - message
    ClientGetPodcastResponse:
      title: ClientGetPodcastResponse
      x-stoplight:
        id: i0mil8u1vbb85
      type: object
      properties:
        Code:
          type: integer
          x-stoplight:
            id: w32kif2pc7mz9
        data:
          $ref: "#/components/schemas/Podcast"
      required:
        - Code
        - data
    ClientGetPodcastsResponse:
      title: ClientGetPodcastsResponse
      x-stoplight:
        id: cpzser9oo2avs
      type: object
      properties:
        code:
          type: integer
          x-stoplight:
            id: ypxamztso971t
        data:
          type: array
          x-stoplight:
            id: wm4nqhlw4iogm
          items:
            $ref: "#/components/schemas/Podcast"
        meta:
          type: string
          x-stoplight:
            id: dwp5ppelnhamp
      required:
        - code
        - data
        - meta
    LoginResponse:
      type: object
      x-examples:
        Example 1:
          code: 200
          data:
            tokens:
              access: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDEzMDM2ODUsInN1YiI6IjAxSEdFTUhZSk1UODMyUUNXQUpNQ0U2N0ZLIiwidG9rZW5UeXBlIjoiYWNjZXNzIn0.DWCoDpMUf5jTPXZWmH4I2bdSmVpkeu5rfYgt0Z5gD4I
              refresh: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDEzODY0ODUsInN1YiI6IjAxSEdFTUhZSk1UODMyUUNXQUpNQ0U2N0ZLIiwidG9rZW5UeXBlIjoicmVmcmVzaCJ9.8Kvc5njD1NJivd9QGAAuV5m2fk8y4saqaVq3IQ9x7iM
            user:
              id: 01HGEMHYJMT832QCWAJMCE67FK
              firstName: Nana
              lastName: Aikinson
              email: nanaaikinson24@example.com
              emailVerified: true
              avatar: null
              channels:
                - web
      properties:
        code:
          type: integer
        data:
          type: object
          required:
            - tokens
            - user
          properties:
            tokens:
              type: object
              required:
                - access
                - refresh
              properties:
                access:
                  type: string
                refresh:
                  type: string
            user:
              $ref: "#/components/schemas/AuthUser"
      required:
        - code
        - data
  securitySchemes:
    X-USER-TOKEN:
      type: apiKey
      in: header
      name: X-USER-TOKEN
