openapi: 3.0.0
x-stoplight:
  id: lkd4mjwpm1z5y
info:
  title: API
  version: '1.0'
  description: Salvation Clinic International Minitries API Documentaion
  contact:
    name: Nana Kwesi Ofosu-Aikins
    email: nanaaikinson24@gmail.com
servers:
  - url: 'http://localhost:3000'
    description: Local
  - url: 'https://c8wc8os.178.79.149.51.sslip.io'
    description: Staging
tags:
  - name: backoffice
  - name: client
paths:
  /auth/login:
    post:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
      operationId: auth-login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      description: Auth login
  /auth/register:
    post:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      operationId: auth-register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      description: Auth register
    parameters: []
  /auth/resend-email-verification:
    post:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      operationId: auth-resend-email-verification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequest'
      description: Auth resend email verification
    parameters: []
  /auth/forgot-password:
    post:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      operationId: auth-forgot-password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequest'
      description: Auth forgot password
    parameters: []
  /auth/refresh-token:
    get:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshTokenResponse'
      operationId: auth-refresh-token
      requestBody:
        required: true
        content: {}
      description: Auth refresh token
      security:
        - X-USER-TOKEN: []
    parameters: []
  /podcasts:
    get:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPodcastsResponse'
      operationId: get-podcasts
      description: 'Client: Get podcasts'
      parameters:
        - schema:
            type: number
          in: query
          name: limit
        - schema:
            type: number
          in: query
          name: page
        - schema:
            type: string
          in: query
          name: search
        - schema:
            type: string
            enum:
              - newest
              - oldest
          in: query
          name: sort
  /podcasts/all:
    get:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPodcastsResponse'
      operationId: get-all-podcasts
      description: 'Client: Get all podcasts'
      parameters:
        - schema:
            type: string
            enum:
              - newest
              - oldest
          in: query
          name: sort
    parameters: []
  '/podcasts/{podcastId}':
    parameters:
      - schema:
          type: string
        name: podcastId
        in: path
        required: true
    get:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPodcastResponse'
      operationId: get-podcast
      description: 'Client: Get podcast'
  '/podcasts/{podcastId}/like':
    parameters:
      - schema:
          type: string
        name: podcastId
        in: path
        required: true
    patch:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '401':
          description: Unauthorized
      operationId: like-podcast
      description: 'Client: Like podcast'
      security:
        - X-USER-TOKEN: []
  '/podcasts/{podcastId}/comment':
    parameters:
      - schema:
          type: string
        name: podcastId
        in: path
        required: true
    post:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '401':
          description: Unauthorized
      operationId: comment-podcast
      description: 'Client: Comment on a podcast'
      security:
        - X-USER-TOKEN: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentPodcastRequest'
  '/podcasts/{podcastId}/comment/{commentId}':
    parameters:
      - schema:
          type: string
        name: podcastId
        in: path
        required: true
      - schema:
          type: string
        name: commentId
        in: path
        required: true
    patch:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '401':
          description: Unauthorized
      operationId: update-podcast-comment
      description: 'Client: Update podcast comment'
      security:
        - X-USER-TOKEN: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentPodcastRequest'
  /playlists:
    get:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistsResponse'
      operationId: get-playlists
      security:
        - X-USER-TOKEN: []
      description: Get playlists
    post:
      summary: ''
      operationId: create-playlist
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistResponse'
      security:
        - X-USER-TOKEN: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorePlaylistRequest'
      tags:
        - client
      description: Create playlist
  '/playlists/{playlistId}':
    parameters:
      - schema:
          type: string
        name: playlistId
        in: path
        required: true
    get:
      summary: ''
      tags:
        - client
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistResponse'
      operationId: get-playlist
      description: 'Client: Get playlist'
      security:
        - X-USER-TOKEN: []
    patch:
      summary: ''
      operationId: update-playlist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaylistResponse'
      description: 'Client: Update playlist'
      security:
        - X-USER-TOKEN: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StorePlaylistRequest'
      tags:
        - client
    delete:
      summary: ''
      operationId: delete-playlist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      description: 'Client: Delete playlist'
      security:
        - X-USER-TOKEN: []
      tags:
        - client
  /prayer-requests:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrayersResponse'
      operationId: get-prayer-requests
      security:
        - X-USER-TOKEN: []
      parameters:
        - schema:
            type: string
            enum:
              - newest
              - oldest
          in: query
          name: sort
      description: 'Client: Get my prayers'
    post:
      summary: ''
      operationId: request-prayer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
      description: 'Client: Request prayer'
      security:
        - X-USER-TOKEN: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrayerRequest'
components:
  schemas:
    AuthUser:
      type: object
      x-examples:
        Example 1:
          id: 01HGEMHYJMT832QCWAJMCE67FK
          firstName: Nana
          lastName: Aikinson
          email: nanaaikinson24@example.com
          emailVerified: true
          avatar: null
          channels:
            - web
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        emailVerified:
          type: boolean
        avatar:
          type: string
          nullable: true
        channels:
          type: array
          items:
            type: string
            enum:
              - web
              - mobile
              - backoffice
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
        - avatar
        - channels
    Podcast:
      type: object
      x-examples:
        Example 1:
          id: 01HGDRCWFG6A5ASHQHWZHN4R70
          author: Evangelist Elijah Ben
          title: SUNDAY ANOINTING SERVICE-THE SPIRIT OF UNDERSTANDING PART 2
          description: Message by Evang. Elijah-Ben Kusi Agyapong during Sunday Anointing Service
          duration: '01:33:21'
          imageUrl: 'https://s3.amazonaws.com/podcasts-image-uploads/rev-elijah-ben-scim-6bbd0a95d-large.png'
          audioUrl: 'https://awscdn.podcasts.com/audio-qCgqW7G68X5kJPLaWfZeGp47Z.mp3'
          published: true
          publishedAt: '2023-11-27T07:44:51Z'
      properties:
        id:
          type: string
        author:
          type: string
        title:
          type: string
        description:
          type: string
        duration:
          type: string
        imageUrl:
          type: string
        audioUrl:
          type: string
        published:
          type: boolean
        publishedAt:
          type: string
      required:
        - id
        - author
        - title
        - description
        - duration
        - imageUrl
        - audioUrl
        - published
        - publishedAt
    Playlist:
      type: object
      x-examples:
        Example 1:
          id: 01HGN0RK7FYJH596PE0X8TTZH1
          title: Honour
          shortUrl: null
          description: ''
          createdAt: '2023-12-02T10:21:38.415726Z'
          podcasts:
            - id: 01HGN0RK7GKJ3MXARR598PN0DG
              author: Evangelist Elijah Ben
              title: 'SCIM UK Stages of honour and dishonour '
              summary: 'Render therefore to all their dues: tribute to whom tribute is due; custom to whom custom; fear to whom fear; honour to whom honour. Romans 13:7'
              description: 'Render therefore to all their dues: tribute to whom tribute is due; custom to whom custom; fear to whom fear; honour to whom honour. Romans 13:7'
              duration: '82:43'
              imageUrl: 'https://s3.amazonaws.com/podcasts-image-uploads/rev-elijah-ben-scim-6bbd0a95d-large.png'
              audioUrl: 'http://awscdn.podcasts.com/SCIM-UK-Stages-of-honour-and-dishonour--eebe.mp3'
              published: true
              publishedAt: '2020-10-19T13:54:06Z'
            - id: 01HGN0RK7GKJ3MXARR59WXVF1F
              author: Evangelist Elijah Ben
              title: Those Who Dishonour / Signs of Dishonour
              summary: 'ROMANS 13:7Render therefore to all their dues: tribute to whom tribute is due; custom to whom custom; fearto whom fear; honour to whom honour.'
              description: 'ROMANS 13:7Render therefore to all their dues: tribute to whom tribute is due; custom to whom custom; fearto whom fear; honour to whom honour.'
              duration: '93:39'
              imageUrl: 'https://s3.amazonaws.com/podcasts-image-uploads/rev-elijah-ben-scim-6bbd0a95d-large.png'
              audioUrl: 'http://awscdn.podcasts.com/Those-Who-Dishonour-Signs-of-Dishonour-d3e1.mp3'
              published: true
              publishedAt: '2020-10-19T08:02:37Z'
      properties:
        id:
          type: string
        title:
          type: string
        shortUrl:
          type: string
          nullable: true
        description:
          type: string
        createdAt:
          type: string
        podcasts:
          $ref: '#/components/schemas/Podcast'
      required:
        - id
        - title
        - shortUrl
        - description
        - createdAt
        - podcasts
    Prayer:
      type: object
      x-examples:
        Example 1:
          id: 01HGRFM7M1F03D6014034KEF2P
          title: This is a test
          description: This is a test description
          completedAt: null
          createdAt: '2023-12-03T18:39:07.393849Z'
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        completedAt:
          type: string
          nullable: true
        createdAt:
          type: string
      required:
        - id
        - title
        - description
        - completedAt
        - createdAt
    LoginRequest:
      type: object
      x-examples:
        Example 1:
          email: nanaaikinson24@example.com
          password: Pa$$w0rd
          channel: web
      properties:
        email:
          type: string
        password:
          type: string
        channel:
          type: string
          enum:
            - web
            - mobile
      required:
        - email
        - password
        - channel
    RegisterRequest:
      type: object
      x-examples:
        Example 1:
          firstName: Nana
          lastName: Aikinson
          email: nanaaikinson24@example.com
          password: Pa$$w0rd
          channel: web
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        channel:
          type: string
          enum:
            - web
            - mobile
      required:
        - firstName
        - lastName
        - email
        - password
        - channel
    CommentPodcastRequest:
      title: CommentPodcastRequest
      x-stoplight:
        id: fbvkzkv2v9pej
      type: object
      properties:
        comment:
          type: string
          x-stoplight:
            id: bjyaef46zg2ds
      required:
        - comment
    MessageResponse:
      title: MessageResponse
      x-stoplight:
        id: 6defb2oihhrik
      type: object
      properties:
        code:
          type: integer
          x-stoplight:
            id: wuyzq2yhox71k
        message:
          type: string
          x-stoplight:
            id: q50kmt3wtn7cw
      required:
        - code
        - message
    GetPodcastResponse:
      title: GetPodcastResponse
      x-stoplight:
        id: i0mil8u1vbb85
      type: object
      properties:
        Code:
          type: integer
          x-stoplight:
            id: w32kif2pc7mz9
        data:
          $ref: '#/components/schemas/Podcast'
      required:
        - Code
        - data
    GetPodcastsResponse:
      title: GetPodcastsResponse
      x-stoplight:
        id: cpzser9oo2avs
      type: object
      properties:
        code:
          type: integer
          x-stoplight:
            id: ypxamztso971t
        data:
          type: array
          x-stoplight:
            id: wm4nqhlw4iogm
          items:
            $ref: '#/components/schemas/Podcast'
        meta:
          type: string
          x-stoplight:
            id: dwp5ppelnhamp
      required:
        - code
        - data
        - meta
    LoginResponse:
      type: object
      x-examples:
        Example 1:
          code: 200
          data:
            tokens:
              access: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDEzMDM2ODUsInN1YiI6IjAxSEdFTUhZSk1UODMyUUNXQUpNQ0U2N0ZLIiwidG9rZW5UeXBlIjoiYWNjZXNzIn0.DWCoDpMUf5jTPXZWmH4I2bdSmVpkeu5rfYgt0Z5gD4I
              refresh: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDEzODY0ODUsInN1YiI6IjAxSEdFTUhZSk1UODMyUUNXQUpNQ0U2N0ZLIiwidG9rZW5UeXBlIjoicmVmcmVzaCJ9.8Kvc5njD1NJivd9QGAAuV5m2fk8y4saqaVq3IQ9x7iM
            user:
              id: 01HGEMHYJMT832QCWAJMCE67FK
              firstName: Nana
              lastName: Aikinson
              email: nanaaikinson24@example.com
              emailVerified: true
              avatar: null
              channels:
                - web
      properties:
        code:
          type: integer
        data:
          type: object
          required:
            - tokens
            - user
          properties:
            tokens:
              type: object
              required:
                - access
                - refresh
              properties:
                access:
                  type: string
                refresh:
                  type: string
            user:
              $ref: '#/components/schemas/AuthUser'
      required:
        - code
        - data
    RefreshTokenResponse:
      type: object
      x-examples:
        Example 1:
          code: 200
          data:
            access: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MDEzNjI1NjMsImlhdCI6MTcwMTM1ODk2MywiaXNzIjoiY29tLnNjaW0uYXBwIiwic3ViIjoiMDFIR0VNSFlKTVQ4MzJRQ1dBSk1DRTY3RksiLCJ0b2tlblR5cGUiOiJhY2Nlc3MifQ.eNrHvF4t2EhHXHdzDqjaPAGSWyc7da26Wq2_WfeTs84
      properties:
        code:
          type: integer
        data:
          type: object
          required:
            - access
          properties:
            access:
              type: string
      required:
        - code
        - data
    PlaylistsResponse:
      type: object
      x-stoplight:
        id: nw7xhwopo1wy9
      x-examples:
        Example 1:
          code: 201
          data:
            id: 01HGN0RK7FYJH596PE0X8TTZH1
            title: Honour
            shortUrl: null
            description: ''
            createdAt: '2023-12-02T10:21:38.415726Z'
            podcasts:
              - id: 01HGN0RK7GKJ3MXARR598PN0DG
                author: Evangelist Elijah Ben
                title: 'SCIM UK Stages of honour and dishonour '
                summary: 'Render therefore to all their dues: tribute to whom tribute is due; custom to whom custom; fear to whom fear; honour to whom honour. Romans 13:7'
                description: 'Render therefore to all their dues: tribute to whom tribute is due; custom to whom custom; fear to whom fear; honour to whom honour. Romans 13:7'
                duration: '82:43'
                imageUrl: 'https://s3.amazonaws.com/podcasts-image-uploads/rev-elijah-ben-scim-6bbd0a95d-large.png'
                audioUrl: 'http://awscdn.podcasts.com/SCIM-UK-Stages-of-honour-and-dishonour--eebe.mp3'
                published: true
                publishedAt: '2020-10-19T13:54:06Z'
              - id: 01HGN0RK7GKJ3MXARR59WXVF1F
                author: Evangelist Elijah Ben
                title: Those Who Dishonour / Signs of Dishonour
                summary: 'ROMANS 13:7Render therefore to all their dues: tribute to whom tribute is due; custom to whom custom; fearto whom fear; honour to whom honour.'
                description: 'ROMANS 13:7Render therefore to all their dues: tribute to whom tribute is due; custom to whom custom; fearto whom fear; honour to whom honour.'
                duration: '93:39'
                imageUrl: 'https://s3.amazonaws.com/podcasts-image-uploads/rev-elijah-ben-scim-6bbd0a95d-large.png'
                audioUrl: 'http://awscdn.podcasts.com/Those-Who-Dishonour-Signs-of-Dishonour-d3e1.mp3'
                published: true
                publishedAt: '2020-10-19T08:02:37Z'
      properties:
        code:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Playlist'
      required:
        - code
        - data
    PlaylistResponse:
      type: object
      x-examples:
        Example 1:
          code: 201
          data:
            id: 01HGN0RK7FYJH596PE0X8TTZH1
            title: Honour
            shortUrl: null
            description: ''
            createdAt: '2023-12-02T10:21:38.415726Z'
            podcasts:
              - id: 01HGN0RK7GKJ3MXARR598PN0DG
                author: Evangelist Elijah Ben
                title: 'SCIM UK Stages of honour and dishonour '
                summary: 'Render therefore to all their dues: tribute to whom tribute is due; custom to whom custom; fear to whom fear; honour to whom honour. Romans 13:7'
                description: 'Render therefore to all their dues: tribute to whom tribute is due; custom to whom custom; fear to whom fear; honour to whom honour. Romans 13:7'
                duration: '82:43'
                imageUrl: 'https://s3.amazonaws.com/podcasts-image-uploads/rev-elijah-ben-scim-6bbd0a95d-large.png'
                audioUrl: 'http://awscdn.podcasts.com/SCIM-UK-Stages-of-honour-and-dishonour--eebe.mp3'
                published: true
                publishedAt: '2020-10-19T13:54:06Z'
              - id: 01HGN0RK7GKJ3MXARR59WXVF1F
                author: Evangelist Elijah Ben
                title: Those Who Dishonour / Signs of Dishonour
                summary: 'ROMANS 13:7Render therefore to all their dues: tribute to whom tribute is due; custom to whom custom; fearto whom fear; honour to whom honour.'
                description: 'ROMANS 13:7Render therefore to all their dues: tribute to whom tribute is due; custom to whom custom; fearto whom fear; honour to whom honour.'
                duration: '93:39'
                imageUrl: 'https://s3.amazonaws.com/podcasts-image-uploads/rev-elijah-ben-scim-6bbd0a95d-large.png'
                audioUrl: 'http://awscdn.podcasts.com/Those-Who-Dishonour-Signs-of-Dishonour-d3e1.mp3'
                published: true
                publishedAt: '2020-10-19T08:02:37Z'
      properties:
        code:
          type: integer
        data:
          $ref: '#/components/schemas/Playlist'
      required:
        - code
        - data
    PrayersResponse:
      type: object
      x-stoplight:
        id: i7z5nysvsyubj
      x-examples:
        Example 1:
          code: 200
          data:
            - id: 01HGRFM7M1F03D6014034KEF2P
              title: This is a test
              description: This is a test description
              completedAt: null
              createdAt: '2023-12-03T18:39:07.393849Z'
      properties:
        code:
          type: integer
        data:
          type: array
          items:
            $ref: '#/components/schemas/Prayer'
      required:
        - code
        - data
    EmailRequest:
      title: EmailRequest
      x-stoplight:
        id: lr5sz4lumv7pa
      type: object
      properties:
        email:
          type: string
          x-stoplight:
            id: 8tzcglhmhrcsr
      required:
        - email
    StorePlaylistRequest:
      type: object
      x-examples:
        Example 1:
          title: Honour
          description: ''
          podcasts:
            - 01HGHB7QZKWWX8VQD4KZ1DRMRX
            - 01HGHB7QZMR2T5YB9W9YYAPQKC
      properties:
        title:
          type: string
        description:
          type: string
        podcasts:
          type: array
          items:
            type: string
      required:
        - title
        - description
        - podcasts
    PrayerRequest:
      type: object
      x-examples:
        Example 1:
          title: This is a test
          description: This is a test description
      properties:
        title:
          type: string
        description:
          type: string
      required:
        - title
        - description
  securitySchemes:
    X-USER-TOKEN:
      type: apiKey
      in: header
      name: X-USER-TOKEN
